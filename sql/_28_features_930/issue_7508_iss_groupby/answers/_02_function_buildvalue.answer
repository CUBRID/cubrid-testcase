===================================================
0
===================================================
0
===================================================
0
===================================================
200
===================================================
8
===================================================
8
===================================================
0
===================================================
0
===================================================
sum(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ sum(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ sum(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
sum(distinct k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ sum(distinct t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ sum(distinct t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
avg(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ avg(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ avg(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
avg(distinct k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ avg(distinct t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ avg(distinct t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
stddev_pop(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_pop(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_pop(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
stddev_pop(distinct k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_pop(distinct t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_pop(distinct t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
stddev_samp(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_samp(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_samp(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
stddev_samp(distinct k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_samp(distinct t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_samp(distinct t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
var_pop(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_pop(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_pop(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
var_pop(distinct k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_pop(distinct t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_pop(distinct t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
var_samp(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_samp(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_samp(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
var_samp(distinct k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_samp(distinct t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_samp(distinct t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
min(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ min(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ min(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
min(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ min(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ min(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
max(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ max(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ max(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
max(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ max(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ max(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
count(k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
count(distinct k3)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(distinct t.k?) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(distinct t.k?) from t t where (t.k?> ?:? ) using index none
===================================================
count(*)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(*) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(*) from t t where (t.k?> ?:? ) using index none
===================================================
sum(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ sum(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ sum(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
sum(distinct v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ sum(distinct t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ sum(distinct t.v) from t t where (t.k?> ?:? ) using index none
===================================================
avg(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ avg(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ avg(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
avg(distinct v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ avg(distinct t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ avg(distinct t.v) from t t where (t.k?> ?:? ) using index none
===================================================
stddev_pop(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_pop(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_pop(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
stddev_pop(distinct v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_pop(distinct t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_pop(distinct t.v) from t t where (t.k?> ?:? ) using index none
===================================================
stddev_samp(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_samp(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_samp(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
stddev_samp(distinct v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_samp(distinct t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ stddev_samp(distinct t.v) from t t where (t.k?> ?:? ) using index none
===================================================
var_pop(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_pop(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_pop(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
var_pop(distinct v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_pop(distinct t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_pop(distinct t.v) from t t where (t.k?> ?:? ) using index none
===================================================
var_samp(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_samp(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_samp(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
var_samp(distinct v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_samp(distinct t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ var_samp(distinct t.v) from t t where (t.k?> ?:? ) using index none
===================================================
min(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ min(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ min(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
min(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ min(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ min(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
max(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ max(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ max(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
max(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ max(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ max(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
count(v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(t.v) from t t where (t.k?> ?:? ) using index none
===================================================
count(distinct v)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(distinct t.v) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(distinct t.v) from t t where (t.k?> ?:? ) using index none
===================================================
count(*)    

Query plan:
iscan
    class: t node[?]
    index: idx term[?] (covers) (index skip scan)
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(*) from t t where (t.k?> ?:? )
Query plan:
sscan
    class: t node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select /*+ INDEX_SS */ count(*) from t t where (t.k?> ?:? ) using index none
===================================================
0
===================================================
0
