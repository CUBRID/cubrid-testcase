===================================================
0
===================================================
0
===================================================
20
===================================================
A1    A2    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first)
           func[?]: avg partition by (? asc nulls first) order by ()
           func[?]: sum partition by (? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first)
           func[?]: avg partition by (? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first)
           func[?]: sum partition by (? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?) from t t
===================================================
A1    A2    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?, ?), avg(t.v) over (partition by ?, ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?, ?), avg(t.v) over (partition by ?, ?) from t t
===================================================
A1    A2    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by ()
           func[?]: avg partition by (? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?, ?), avg(t.v) over (partition by ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first)
           func[?]: avg partition by (? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?, ?), avg(t.v) over (partition by ?) from t t
===================================================
A1    A2    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: avg partition by (? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?, ? order by ?), avg(t.v) over (partition by ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first)
           func[?]: avg partition by (? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ?, ? order by ?), avg(t.v) over (partition by ?) from t t
===================================================
A1    A2    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
           func[?]: sum partition by (? asc nulls first) order by (? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ? order by ?), avg(t.v) over (partition by ?, ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first) order by (? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ? order by ?), avg(t.v) over (partition by ?, ?) from t t
===================================================
A1    A2    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first) order by (? asc nulls first, ? asc nulls first, ? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ?, ? order by ?, ?), avg(t.v) over (partition by ? order by ?, ?, ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first) order by (? asc nulls first, ? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ?, ? order by ?, ?), avg(t.v) over (partition by ? order by ?, ?, ?) from t t
===================================================
A1    A2    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ?, ?, ? order by ?), avg(t.v) over (partition by ?, ? order by ?, ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ?, ?, ? order by ?), avg(t.v) over (partition by ?, ? order by ?, ?) from t t
===================================================
'one run'    
one run     

Query plan:
sscan
    class: db_root node[?]
    cost:  ? card ?
Query stmt:
select 'one run' from db_root db_root
===================================================
A1    A2    A3    A4    A5    A6    A7    A8    A9    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: lead partition by () order by ()
Query stmt:
select sum(t.v) over (partition by ?, ? order by ?, ?), avg(t.v) over (partition by ?, ? order by ?, ?), stddev_samp(t.v) over (partition by ?, ? order by ?, ?), stddev_pop(t.v) over (partition by ?, ? order by ?, ?), var_samp(t.v) over (partition by ?, ? order by ?, ?), var_pop(t.v) over (partition by ?, ? order by ?, ?), min(t.v) over (partition by ?, ? order by ?, ?), max(t.v) over (partition by ?, ? order by ?, ?), lead(t.v, ?, null) over () from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: lead partition by () order by ()
Query stmt:
select sum(t.v) over (partition by ?, ? order by ?, ?), avg(t.v) over (partition by ?, ? order by ?, ?), stddev_samp(t.v) over (partition by ?, ? order by ?, ?), stddev_pop(t.v) over (partition by ?, ? order by ?, ?), var_samp(t.v) over (partition by ?, ? order by ?, ?), var_pop(t.v) over (partition by ?, ? order by ?, ?), min(t.v) over (partition by ?, ? order by ?, ?), max(t.v) over (partition by ?, ? order by ?, ?), lead(t.v, ?, null) over () from t t
===================================================
A1    A2    A3    A4    A5    A6    A7    A8    A9    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by ()
           func[?]: lead partition by () order by (? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first) order by ()
           func[?]: stddev_pop partition by () order by (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
           func[?]: avg partition by () order by (? asc nulls first, ? asc nulls first)
           func[?]: sum partition by () order by (? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
           func[?]: stddev_samp partition by () order by (? asc nulls first, ? asc nulls first, ? asc nulls first)
Query stmt:
select sum(t.v) over (order by ?), avg(t.v) over (order by ?, ?), stddev_samp(t.v) over (order by ?, ?, ?), stddev_pop(t.v) over (order by ?, ?, ?, ?), var_samp(t.v) over (partition by ?), var_pop(t.v) over (partition by ?, ?), min(t.v) over (partition by ?, ?, ?), max(t.v) over (partition by ?, ?, ?, ?), lead(t.v, ?, null) over (order by ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first)
           func[?]: lead partition by () order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by () order by (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by () order by (? asc nulls first, ? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by () order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first)
           func[?]: sum partition by () order by (? asc nulls first)
Query stmt:
select sum(t.v) over (order by ?), avg(t.v) over (order by ?, ?), stddev_samp(t.v) over (order by ?, ?, ?), stddev_pop(t.v) over (order by ?, ?, ?, ?), var_samp(t.v) over (partition by ?), var_pop(t.v) over (partition by ?, ?), min(t.v) over (partition by ?, ?, ?), max(t.v) over (partition by ?, ?, ?, ?), lead(t.v, ?, null) over (order by ?) from t t
===================================================
A1    A2    A3    A4    A5    A6    A7    A8    A9    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
           func[?]: var_samp partition by (? asc nulls first) order by (? asc nulls first)
           func[?]: sum partition by (? asc nulls first) order by ()
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: lead partition by () order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?, ?), stddev_samp(t.v) over (partition by ?, ?, ?), stddev_pop(t.v) over (partition by ?, ?, ?, ?), var_samp(t.v) over (partition by ? order by ?), var_pop(t.v) over (partition by ?, ? order by ?), min(t.v) over (partition by ?, ?, ? order by ?), max(t.v) over (partition by ?, ? order by ?, ?), lead(t.v, ?, null) over () from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first)
           func[?]: sum partition by (? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: lead partition by () order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?, ?), stddev_samp(t.v) over (partition by ?, ?, ?), stddev_pop(t.v) over (partition by ?, ?, ?, ?), var_samp(t.v) over (partition by ? order by ?), var_pop(t.v) over (partition by ?, ? order by ?), min(t.v) over (partition by ?, ?, ? order by ?), max(t.v) over (partition by ?, ? order by ?, ?), lead(t.v, ?, null) over () from t t
===================================================
A1    A2    A3    A4    A5    A6    A7    A8    A9    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
           func[?]: sum partition by (? asc nulls first) order by ()
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first) order by (? asc nulls first)
           func[?]: lead partition by () order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?, ?), stddev_samp(t.v) over (partition by ?, ?, ?), stddev_pop(t.v) over (partition by ?, ?, ?, ?), var_samp(t.v) over (partition by ? order by ?), var_pop(t.v) over (partition by ?, ? order by ?), min(t.v) over (partition by ?, ?, ? order by ?), max(t.v) over (partition by ?, ? order by ?, ?), lead(t.v, ?, null) over () from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first)
           func[?]: sum partition by (? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: lead partition by () order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?, ?), stddev_samp(t.v) over (partition by ?, ?, ?), stddev_pop(t.v) over (partition by ?, ?, ?, ?), var_samp(t.v) over (partition by ? order by ?), var_pop(t.v) over (partition by ?, ? order by ?), min(t.v) over (partition by ?, ?, ? order by ?), max(t.v) over (partition by ?, ? order by ?, ?), lead(t.v, ?, null) over () from t t
===================================================
'two runs'    
two runs     

Query plan:
sscan
    class: db_root node[?]
    cost:  ? card ?
Query stmt:
select 'two runs' from db_root db_root
===================================================
A1    A2    A3    A4    A5    A6    A7    A8    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
           func[?]: var_samp partition by (? asc nulls first) order by (? asc nulls first)
           func[?]: sum partition by (? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?, ?), stddev_samp(t.v) over (partition by ?, ?, ?), stddev_pop(t.v) over (partition by ?, ? order by ?, ?), var_samp(t.v) over (partition by ? order by ?), var_pop(t.v) over (partition by ?, ? order by ?), min(t.v) over (partition by ?, ?, ? order by ?), max(t.v) over (partition by ?, ? order by ?, ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first)
           func[?]: sum partition by (? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?, ?), stddev_samp(t.v) over (partition by ?, ?, ?), stddev_pop(t.v) over (partition by ?, ? order by ?, ?), var_samp(t.v) over (partition by ? order by ?), var_pop(t.v) over (partition by ?, ? order by ?), min(t.v) over (partition by ?, ?, ? order by ?), max(t.v) over (partition by ?, ? order by ?, ?) from t t
===================================================
A1    A2    A3    A4    A5    A6    A7    A8    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
           func[?]: sum partition by (? asc nulls first) order by ()
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first) order by (? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?, ?), stddev_samp(t.v) over (partition by ?, ?, ?), stddev_pop(t.v) over (partition by ?, ? order by ?, ?), var_samp(t.v) over (partition by ? order by ?), var_pop(t.v) over (partition by ?, ? order by ?), min(t.v) over (partition by ?, ?, ? order by ?), max(t.v) over (partition by ?, ? order by ?, ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first) order by (? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by ()
    run[?]: sort with key (? asc nulls first)
           func[?]: sum partition by (? asc nulls first) order by ()
Query stmt:
select sum(t.v) over (partition by ?), avg(t.v) over (partition by ?, ?), stddev_samp(t.v) over (partition by ?, ?, ?), stddev_pop(t.v) over (partition by ?, ? order by ?, ?), var_samp(t.v) over (partition by ? order by ?), var_pop(t.v) over (partition by ?, ? order by ?), min(t.v) over (partition by ?, ?, ? order by ?), max(t.v) over (partition by ?, ? order by ?, ?) from t t
===================================================
'three runs'    
three runs     

Query plan:
sscan
    class: db_root node[?]
    cost:  ? card ?
Query stmt:
select 'three runs' from db_root db_root
===================================================
A1    A2    A3    A4    A5    A6    A7    A8    

Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ?, ? order by ?, ?), avg(t.v) over (partition by ?, ? order by ?, ?), stddev_samp(t.v) over (partition by ?, ? order by ?, ?), stddev_pop(t.v) over (partition by ?, ? order by ?, ?), var_samp(t.v) over (partition by ?, ? order by ?, ?), var_pop(t.v) over (partition by ?, ? order by ?, ?), min(t.v) over (partition by ?, ? order by ?, ?), max(t.v) over (partition by ?, ? order by ?, ?) from t t
Query plan:
sscan
    class: t node[?]
    cost:  ? card ?
Analytic functions:
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: max partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: min partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: var_samp partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_pop partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: stddev_samp partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: avg partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
    run[?]: sort with key (? asc nulls first, ? asc nulls first, ? asc nulls first, ? asc nulls first)
           func[?]: sum partition by (? asc nulls first, ? asc nulls first) order by (? asc nulls first, ? asc nulls first)
Query stmt:
select sum(t.v) over (partition by ?, ? order by ?, ?), avg(t.v) over (partition by ?, ? order by ?, ?), stddev_samp(t.v) over (partition by ?, ? order by ?, ?), stddev_pop(t.v) over (partition by ?, ? order by ?, ?), var_samp(t.v) over (partition by ?, ? order by ?, ?), var_pop(t.v) over (partition by ?, ? order by ?, ?), min(t.v) over (partition by ?, ? order by ?, ?), max(t.v) over (partition by ?, ? order by ?, ?) from t t
===================================================
0
