===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
0
===================================================
i    
1     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= cast(? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= cast(? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
2     
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3     
4     
5     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= ?:? 
===================================================
i    
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= cast(? as float)
===================================================
i    
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= cast(? as double)
===================================================
i    
2     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= ?:? 
===================================================
i    
1     
2     
3     
4     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:?  and t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1     
2     
3     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where ((t.i= ?:? ) or (t.i= ?:? ) or (t.i= ?:? )) order by ?
/* ---> skip ORDER BY */
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
0
===================================================
i    
1.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= cast(? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= cast(? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
2.0000     
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0000     
4.0000     
5.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= ?:? 
===================================================
i    
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= cast(? as float)
===================================================
i    
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= cast(? as double)
===================================================
i    
2.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= ?:? 
===================================================
i    
1.0000     
2.0000     
3.0000     
4.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:?  and t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0000     
2.0000     
3.0000     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where ((t.i= ?:? ) or (t.i= ?:? ) or (t.i= ?:? )) order by ?
/* ---> skip ORDER BY */
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
0
===================================================
i    
1.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= cast(? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= cast(? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
2.0     
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= ?:? 
===================================================
i    
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= cast(? as float)
===================================================
i    
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= cast(? as double)
===================================================
i    
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= ?:? 
===================================================
i    
1.0     
2.0     
3.0     
4.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:?  and t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     
3.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where ((t.i= ?:? ) or (t.i= ?:? ) or (t.i= ?:? )) order by ?
/* ---> skip ORDER BY */
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
0
===================================================
i    
1.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i< ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i> ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= cast(? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= cast(? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
2.0     
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= cast(?.? as float)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= cast(?.? as double)) order by ?
/* ---> skip ORDER BY */
===================================================
i    
3.0     
4.0     
5.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= ?:? 
===================================================
i    
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= cast(? as float)
===================================================
i    
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= cast(? as double)
===================================================
i    
2.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    cost:  ? card ?
Query stmt:
select t.i from t t where t.i= ?:? 
===================================================
i    
1.0     
2.0     
3.0     
4.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where (t.i>= ?:?  and t.i<= ?:? ) order by ?
/* ---> skip ORDER BY */
===================================================
i    
1.0     
2.0     
3.0     

Query plan:
iscan
    class: t node[?]
    index: i_t_i term[?] (covers)
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t.i from t t where ((t.i= ?:? ) or (t.i= ?:? ) or (t.i= ?:? )) order by ?
/* ---> skip ORDER BY */
===================================================
0
===================================================
0
