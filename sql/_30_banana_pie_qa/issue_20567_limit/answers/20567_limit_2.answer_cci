===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
a    b    average    
2     b     1.0     
3     c     2.0     
4     d     2.0     
5     e     3.0     
6     f     3.0     

Query plan:
sscan
    class: t? node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select avg(t?.c) from t? t? where t?.a=ttt.a)
Query plan:
sscan
    class: t? node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select t?.a_? from (select avg(t?.c) from t? t? where t?.a=ttt.a) t? (a_?) where (inst_num()<= ?:? ))
Query plan:
temp(order by)
    subplan: sscan
                 class: ttt node[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select ttt.a, ttt.b, (select t?.a_? from (select avg(t?.c) from t? t? where t?.a=ttt.a) t? (a_?) where (inst_num()<= ?:? )) from t? ttt order by ?, ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
a    b    average    
1     a     100     
2     b     null     
3     c     100     

Query plan:
sscan
    class: t? node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select sum(t?.c) from t? t? where t?.a=t?.a)
Query plan:
sscan
    class: t? node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select t?.a_? from (select sum(t?.c) from t? t? where t?.a=t?.a) t? (a_?) where (inst_num()<= ?:? ))
Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select t?.a, t?.b, (select t?.a_? from (select sum(t?.c) from t? t? where t?.a=t?.a) t? (a_?) where (inst_num()<= ?:? )) from t? t? order by ? for orderby_num()<= ?:? )
Query plan:
temp(order by)
    subplan: sscan
                 class: __t? node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select [__t?].a, [__t?].b, [__t?].average from (select t?.a, t?.b, (select t?.a_? from (select sum(t?.c) from t? t? where t?.a=t?.a) t? (a_?) where (inst_num()<= ?:? )) as [average] from t? t? order by ? for orderby_num()<= ?:? ) [__t?] (a, b, average) where ([__t?].a< ?:? ) order by ?, ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
a    b    c    
3     c     2     
5     e     3     

Query plan:
sscan
    class: t? node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select distinct max(t?.b) from t? t? where t?.a=t?.a)
Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 sargs: term[?]
                 subqs: ?
                 cost:  ? card ?
    sort:  ? asc, ? asc
    cost:  ? card ?
Query stmt:
select t?.a, t?.b, t?.c from t? t? where t?.b in (select distinct max(t?.b) from t? t? where t?.a=t?.a) order by ?, ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
Error:-493
===================================================
0
===================================================
a    c    
3     100     
5     200     

Query plan:
temp(order by)
    subplan: nl-join (inner join)
                 edge:  term[?]
                 outer: sscan
                            class: t? node[?]
                            cost:  ? card ?
                 inner: sscan
                            class: v? node[?]
                            sargs: term[?]
                            cost:  ? card ?
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select v?.a, t?.c from t? v?, t? t? where (v?.b=t?.b) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? )
Query plan:
temp(order by)
    subplan: sscan
                 class: v? node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select v?.a, v?.c from (select v?.a, t?.c from t? v?, t? t? where (v?.b=t?.b) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? ) v? (a, c) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
a    c    
5     200     
3     100     

Query plan:
temp(order by)
    subplan: nl-join (inner join)
                 edge:  term[?]
                 outer: sscan
                            class: t? node[?]
                            cost:  ? card ?
                 inner: sscan
                            class: v? node[?]
                            sargs: term[?] AND term[?]
                            cost:  ? card ?
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select v?.a, t?.c from t? v?, t? t? where (v?.a is not null ) and (v?.b=t?.b) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? )
Query plan:
temp(order by)
    subplan: sscan
                 class: v? node[?]
                 cost:  ? card ?
    sort:  ? desc
    cost:  ? card ?
Query stmt:
select v?.a, v?.c from (select v?.a, t?.c from t? v?, t? t? where (v?.a is not null ) and (v?.b=t?.b) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? ) v? (a, c) order by ? desc  for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
View    Create View    
v1     select [t1].[a], [t2].[c] from [t1] [t1], [t2] [t2] where [t1].[b]=[t2].[b] order by 1 for orderby_num()>0+1 and orderby_num()<=0+1+1+2-3+4*5/2     

Query plan:
temp(order by)
    subplan: nl-join (inner join)
                 edge:  term[?]
                 outer: sscan
                            class: t? node[?]
                            cost:  ? card ?
                 inner: sscan
                            class: DUMMY node[?]
                            sargs: term[?]
                            cost:  ? card ?
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
(select DUMMY.a, t?.c from t? DUMMY, t? t? where (DUMMY.b=t?.b) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? )
Query plan:
sscan
    class: DUMMY node[?]
    cost:  ? card ?
Query stmt:
(select count(*) from (select DUMMY.a, t?.c from t? DUMMY, t? t? where (DUMMY.b=t?.b) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? ) DUMMY (a, c))
Query plan:
sscan
    class: DUMMY node[?]
    cost:  ? card ?
Query stmt:
(select DUMMY.a_? from (select count(*) from (select DUMMY.a, t?.c from t? DUMMY, t? t? where (DUMMY.b=t?.b) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? ) DUMMY (a, c)) DUMMY (a_?))
Query plan:
nl-join (left outer join)
    outer: nl-join (inner join)
               edge:  table(?) -> t node[?]
               outer: iscan
                          class: u node[?]
                          index: u_db_user_name term[?]
                          cost:  ? card ?
               inner: sscan
                          class: t node[?]
                          sargs: table(?) -> t node[?]
                          cost:  ? card ?
               cost:  ? card ?
    inner: sscan
               class: db_user node[?]
               sargs: t node[?] g -> db_user node[?]
               cost:  ? card ?
    sargs: t node[?] g -> db_user node[?]
    cost:  ? card ?
Query stmt:
(select set{ CURRENT_USER }+coalesce(sum(set{t.g.[name]}), set{}) from db_user u, table(u.[groups]) t (g) where u.[name]= CURRENT_USER )
Query plan:
nl-join (left outer join)
    outer: nl-join (inner join)
               edge:  table(?) -> t node[?]
               outer: iscan
                          class: u node[?]
                          index: u_db_user_name term[?]
                          cost:  ? card ?
               inner: sscan
                          class: t node[?]
                          sargs: table(?) -> t node[?]
                          cost:  ? card ?
               cost:  ? card ?
    inner: sscan
               class: db_user node[?]
               sargs: t node[?] g -> db_user node[?]
               cost:  ? card ?
    sargs: t node[?] g -> db_user node[?]
    cost:  ? card ?
Query stmt:
(select set{ CURRENT_USER }+coalesce(sum(set{t.g.[name]}), set{}) from db_user u, table(u.[groups]) t (g) where u.[name]= CURRENT_USER )
Query plan:
follow
    edge:  au node[?] grantee -> db_user node[?]
    head:  sscan
              class: au node[?]
              sargs: term[?]
              cost:  ? card ?
    sargs: term[?]
    cost:  ? card ?
Query stmt:
(select sum(set{au.class_of}) from [_db_auth] au where {[name]} subseteq (select set{ CURRENT_USER }+coalesce(sum(set{t.g.[name]}), set{}) from db_user u, table(u.[groups]) t (g) where u.[name]= CURRENT_USER ) and au.auth_type= ?:? )
Query plan:
follow
    edge:  _db_class node[?] owner -> db_user node[?]
    head:  nl-join (cross join)
              outer: idx-join (inner join)
                         outer: iscan
                                    class: _db_class node[?]
                                    index: i__db_class_class_name term[?]
                                    cost:  ? card ?
                         inner: iscan
                                    class: VC node[?]
                                    index: i__db_query_spec_class_of VC node[?] class_of -> _db_class node[?]
                                    cost:  ? card ?
                         cost:  ? card ?
              inner: iscan
                         class: c node[?]
                         index: i__db_class_class_name term[?]
                         cost:  ? card ?
              cost:  ? card ?
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select  if(VC.class_of.class_name='',  cast((select DUMMY.a_? from (select count(*) from (select DUMMY.a, t?.c from t? DUMMY, t? t? where (DUMMY.b=t?.b) order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? ) DUMMY (a, c)) DUMMY (a_?)) as varchar), VC.class_of.class_name),  if(c.[comment] is null  or c.[comment]='', VC.spec, VC.spec, ' comment=''', c.[comment], '''') from [_db_query_spec] VC, [_db_class] c where ( CURRENT_USER ='DBA' or {VC.class_of.[owner].[name]} subseteq (select set{ CURRENT_USER }+coalesce(sum(set{t.g.[name]}), set{}) from db_user u, table(u.[groups]) t (g) where u.[name]= CURRENT_USER ) or {VC.class_of} subseteq (select sum(set{au.class_of}) from [_db_auth] au where {[name]} subseteq (select set{ CURRENT_USER }+coalesce(sum(set{t.g.[name]}), set{}) from db_user u, table(u.[groups]) t (g) where u.[name]= CURRENT_USER ) and au.auth_type= ?:? )) and (c.class_name= ?:? ) and (VC.class_of.class_name= ?:? ) and (VC.class_of.class_name=c.class_name)
===================================================
0
===================================================
a    b    c    
4     d     2     
6     f     3     

Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t?.a, t?.b, t?.c from t? t? where t?.a mod ?=? order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
Query plan:
sscan
    simple CTE:cte node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
with cte(a, b, c) as (select t?.a, t?.b, t?.c from t? t? where t?.a mod ?=? order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? )select cte.a, cte.b, cte.c from  cte where (inst_num()> ?:?  and inst_num()<= ?:? )
===================================================
a    b    c    
2     b     1     
4     d     2     
6     f     3     

Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t?.a, t?.b, t?.c from t? t? where t?.a mod ?=? order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
Query plan:
sscan
    simple CTE:cte node[?]
    sargs: term[?]
    cost:  ? card ?
Query stmt:
with cte(a, b, c) as (select t?.a, t?.b, t?.c from t? t? where t?.a mod ?=? order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? )select cte.a, cte.b, cte.c from  cte where (inst_num()> ?:?  and inst_num()<= ?:? )
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
3
===================================================
1
===================================================
2
===================================================
a    
2     

Query plan:
temp(order by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a from foo foo order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
a    
2     

Query plan:
temp(order by)
    subplan: sscan
                 class: foo node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo.a from foo foo order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
a    
2     
3     

Query plan:
temp(order by)
    subplan: sscan
                 class: foo__p__p? node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo__p__p?.a from foo__p__p? foo__p__p? order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
a    
7     

Query plan:
temp(order by)
    subplan: sscan
                 class: foo__p__p? node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select foo__p__p?.a from foo__p__p? foo__p__p? order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
0
===================================================
4
===================================================
4
===================================================
a    a    b    
1     1     3     
1     1     3     
1     1     3     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: iscan
               class: foo node[?]
               index: u_foo_a term[?] (covers)
               sargs: term[?]
               cost:  ? card ?
    inner: temp
               order: UNORDERED
               subplan: sscan
                            class: foo? node[?]
                            sargs: term[?]
                            cost:  ? card ?
               cost:  ? card ?
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select foo.a, foo?.a, foo?.b from foo foo left outer join foo? foo? on foo.a=foo?.a and foo?.a= ?:?  where (inst_num()> ?:?  and inst_num()<= ?:? ) and (foo.a= ?:? )
===================================================
a    a    b    
1     1     3     
2     2     3     
3     null     null     

Query plan:
temp(distinct)
    subplan: nl-join (left outer join)
                 edge:  term[?]
                 outer: sscan
                            class: foo node[?]
                            cost:  ? card ?
                 inner: temp
                            order: UNORDERED
                            subplan: sscan
                                         class: foo? node[?]
                                         cost:  ? card ?
                            cost:  ? card ?
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select distinct foo.a, foo?.a, foo?.b from foo foo left outer join foo? foo? on foo.a=foo?.a order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
0
===================================================
0
===================================================
0
===================================================
44
===================================================
0
===================================================
48
===================================================
a    a    
25     25     

Query plan:
nl-join (left outer join)
    edge:  term[?]
    outer: iscan
               class: t? node[?]
               index: pk_t?_a term[?] (covers)
               sargs: term[?]
               cost:  ? card ?
    inner: temp
               order: UNORDERED
               subplan: iscan
                            class: t? node[?]
                            index: pk_t?_a term[?] (covers)
                            cost:  ? card ?
               cost:  ? card ?
    sargs: term[?]
    cost:  ? card ?
Query stmt:
select t?.a, t?.a from t? t? left outer join t? t? on t?.a=t?.a and t?.a= ?:?  where (inst_num()<= ?:? ) and (t?.a= ?:? )
===================================================
0
===================================================
a    a    
1     1     
2     2     
3     3     
4     4     
5     5     
6     6     
7     7     
8     8     
9     9     
10     10     

Query plan:
temp(order by)
    subplan: nl-join (left outer join)
                 edge:  term[?]
                 outer: temp(sort limit)
                            subplan: sscan
                                         class: t? node[?]
                                         cost:  ? card ?
                            cost:  ? card ?
                 inner: temp
                            order: UNORDERED
                            subplan: sscan
                                         class: t? node[?]
                                         cost:  ? card ?
                            cost:  ? card ?
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select /*+ USE_NL */ t?.a, t?.a from t? t? left outer join t? t? on t?.a=t?.a order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
0
===================================================
0
===================================================
0
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
1
===================================================
host_year    nation    gold    silver    bronze    e    
1988     CAN     3     2     5     a     
1996     KOR     7     15     5     c     
1988     NZL     3     2     8     b     
2004     JPN     16     9     12     e     
2000     RUS     32     28     28     d     

Query plan:
temp(order by)
    subplan: sscan
                 class: participant? node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select participant?.host_year, participant?.nation, participant?.gold, participant?.silver, participant?.bronze, participant?.e from participant? participant? order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
host_year    nation    gold    silver    bronze    e    
2004     JPN     16     9     12     e     
2000     RUS     32     28     28     d     

Query plan:
temp(order by)
    subplan: sscan
                 class: participant? node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select participant?.host_year, participant?.nation, participant?.gold, participant?.silver, participant?.bronze, participant?.e from participant? participant? order by ? for orderby_num()> ?:?  and orderby_num()<= ?:? 
===================================================
host_year    nation    gold    silver    bronze    e    
1988     CAN     3     2     5     a     
1996     KOR     7     15     5     c     

Query plan:
temp(order by)
    subplan: sscan
                 class: participant? node[?]
                 sargs: term[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select participant?.host_year, participant?.nation, participant?.gold, participant?.silver, participant?.bronze, participant?.e from participant? participant? where (participant?.gold< ?:? ) order by ? for orderby_num()<= ?:? 
===================================================
0
