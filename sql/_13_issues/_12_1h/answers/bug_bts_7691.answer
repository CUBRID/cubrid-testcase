===================================================
0
===================================================
0
===================================================
0
===================================================
2
===================================================
a    b    
a     a     

Query plan:
iscan
    class: t? node[?]
    index: i? term[?]
    cost:  ? card ?
Query stmt:
select t?.a, t?.b from t? t? where  upper(t?.a)='A' collate iso?_bin_ts
===================================================
a    b    
a     a     

Query plan:
iscan
    class: t? node[?]
    index: i? term[?]
    cost:  ? card ?
Query stmt:
select t?.a, t?.b from t? t? where  upper(t?.a)='A' collate iso?_bin_ts
===================================================
a    b    
a     a     

Query plan:
iscan
    class: s? node[?]
    index: i? term[?]
    cost:  ? card ?
Query stmt:
select s?.a, s?.b from t? s? where  upper(s?.a)='A' collate iso?_bin_ts
===================================================
a    b    
a     a     

Query plan:
iscan
    class: s? node[?]
    index: i? term[?]
    cost:  ? card ?
Query stmt:
select s?.a, s?.b from t? s? where  upper(s?.a)='A' collate iso?_bin_ts
===================================================
0
===================================================
0
===================================================
3
===================================================
a    b    a    b    

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: iscan
               class: t? node[?]
               index: i? term[?]
               cost:  ? card ?
    inner: sscan
               class: t? node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ t?.a, t?.b, t?.a, t?.b from t? t?, t? t? where t?.a= cast(t?.a as char(?) collate iso?_bin_ts) and  upper(t?.a)='B' collate iso?_bin_ts
===================================================
a    b    a    b    

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: iscan
               class: a node[?]
               index: i? term[?]
               cost:  ? card ?
    inner: sscan
               class: b node[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ a.a, a.b, b.a, b.b from t? a, t? b where a.a= cast(b.a as char(?) collate iso?_bin_ts) and  upper(a.a)='B' collate iso?_bin_ts
===================================================
a    b    a    b    

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: sscan
               class: a node[?]
               cost:  ? card ?
    inner: iscan
               class: b node[?]
               index: i? term[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ a.a, a.b, b.a, b.b from t? a, t? b where a.a= cast(b.a as char(?) collate iso?_bin_ts) and  lower(b.b)='a'
===================================================
a    b    a    b    

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: sscan
               class: a node[?]
               cost:  ? card ?
    inner: iscan
               class: b node[?]
               index: i? term[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ a.a, a.b, b.a, b.b from t? a, t? b where a.a= cast(b.a as char(?) collate iso?_bin_ts) and  lower(b.b) in multiset{'a', 'c'}
===================================================
a    b    a    b    

Query plan:
nl-join (inner join)
    edge:  term[?]
    outer: iscan
               class: a node[?]
               index: i? term[?]
               cost:  ? card ?
    inner: iscan
               class: b node[?]
               index: i? term[?]
               sargs: term[?]
               cost:  ? card ?
    cost:  ? card ?
Query stmt:
select /*+ ORDERED */ a.a, a.b, b.a, b.b from t? a, t? b where a.a= cast(b.a as char(?) collate iso?_bin_ts) and  lower(b.b) in multiset{'a', 'c'} and  upper(a.a)<'b' collate iso?_bin_ts
===================================================
a    b    
a     a     
b     b     

Query plan:
temp(order by)
    subplan: sscan
                 class: t? node[?]
                 cost:  ? card ?
    sort:  ? asc
    cost:  ? card ?
Query stmt:
select t?.a, t?.b from t? t? order by ?
===================================================
0
===================================================
0
===================================================
0
